1.定义：为变量分配存储空间，声明：向程序表明变量的类型和名字（external）
2.可以声明多次，但只能定义一次

#include<iostream>
#include<string>
extern int decleartest=123;
//可以声明多次
extern int decleartest;

int main()
{
	std::string a = "C++ Primer";
	std::string b("This is a test");
	std::string c(10, '9');
	std::cout<<a<<b<<c<<std::endl;
	/*int aa; 不可以使用未定义的变量*/
    /*std::cout << aa;*/
	//但是对于string 类型，属于类类型的，具有默认的构造函数，给对象附上“”值
	std::string test;

    std::cout << test;
	//进行了定义
    int decleartest = 1;
	std::cout << decleartest;
}
3.在函数外部的时候进行了声明可以同时进行定义，函数内的声明只能是声明
4.意义举足轻重，虽然说看起来微不足道。任意在多个文件中使用的变量都需要有与定义分离的声明，一个文件包含有变量的定义，使用该变量的其他文件则包含该变量的声明。