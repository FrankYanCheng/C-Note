const的限定符是对指针指向的对象而言的，并不是针对指针。所以指针可以指向其他常量
//指向const对象的指针是自以为指向的指针~
	const double a = 1.2;
    const double *b = &a;
	const double c = 1.3;
	b = &c;
	cout << *b << endl;

	double er = 3.14;
	//const指针可以对普通的数据进行读取，但不能更改,因为系统没法分辨指针指向的值是否是const类型，系统会把它所指的值都视为const类型
	const double *d = &er;
	double dc = 4;
	//*d = *d + 1;
	d = &dc;
	dc = 8888;//这里直接修改了值，简介的更改了const指针指向的对象
	cout << *d << endl;
--------------------------------------------------------------
常用在形参的传递中，避免因为传递数值发生改变而导致的修改，const不能改变值

------------------------------下面是指向const的指针-------------------------------------------
	//const指针对象所指的地址不能改，但没说不能改变该地址指向的值啊，所以可以改值
	//和上面的比较，指向const对象的指针是不能改变地址指向的值，但是可以改变指针指向的地址
	//，而const指针可以改变指针指向的值，但是不能改变指针指向的地址
	int test = 3;
	int *const ct = &test;
	cout << ct<<endl;
	*ct = 0;
	cout << ct<<endl;
	cout << test;
-----------------------------------指向const对象的const指针---------------------------------
集合上述特点，地址和值都不能改
const double *const test 